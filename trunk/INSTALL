Installation
============

Requirements
-------------

- C++ compiler toolchain;
- python;
- scons;
- JsonCpp source files (http://jsoncpp.sourceforge.net/).

Build JsonCpp
--------------
Get JsonCpp source code from SVN repository (there are no releases):

$ svn co https://jsoncpp.svn.sourceforge.net/svnroot/jsoncpp/trunk/jsoncpp jsoncpp 
$ cd jsoncpp/

Compilation,
for Linux and MacOS X:
$ scons platform=linux-gcc

for Windows (MinGW):
$ scons platform=mingw

for Windows (Visual Studio):
$ scons platform=msvc80 (or msvc70, msvc71 depending on your Visual Studio version)

You have to manually copy the shared library and include files,
for Linux: 
# cp buildscons/linux-gcc-*/src/lib_json/libjson_linux-gcc*libmt.so /usr/local/lib/

for MacOS X: 
# cp buildscons/linux-gcc-*/src/lib_json/libjson_linux-gcc*.dylib /usr/local/lib/

Finally copy the include files:
# cp -r include /usr/local/include/json

Build JsonRpc-Cpp
------------------

To build the library: 
$ scons build 

To build all (library, examples, ...):
$ scons all

To clean up the project: 
$ scons -c all

To build documentation:
$ scons doc

Install
--------

On Unix systems, simply run as root: 
# scons install

Default will install include files in /usr/local/include/jsonrpc/ and 
libjsonrpc.so file in /usr/local/lib/

To choose another installation directory add "prefix" option: 
$ scons install prefix='/path/to/installation/directory'


To uninstall, run as root:
# scons -c install 

For custom installation directory:
$ scons -c install prefix='/path/to/installation/directory'

Examples
---------

JsonRpc-Cpp provides simple JSON-RPC TCP and UDP servers as well as TCP and UDP clients.

To build the examples:
$ scons examples

This will build tcp-server, udp-server, tcp-client and udp-client examples.
Note that servers will be bind to localhost, port 8086 and clients will connect to the same address/port.

To run the TCP JSON-RPC server:
$ examples/tcp-server

To run the TCP JSON-RPC client:
$ examples/tcp-client

You should see: 
Query is: {"id":1,"jsonrpc":"2.0","method":"system.print"}

Received: {"id":1,"jsonrpc":"2.0","result":"success"}


To run the UDP JSON-RPC server:
$ examples/udp-server

To run the UDP JSON-RPC client:
$ examples/udp-client

You should see: 
Query is: {"id":1,"jsonrpc":"2.0","method":"system.print"}

Received: {"id":1,"jsonrpc":"2.0","result":"success"}

Unit tests
-----------

CppUnit framework (http://cppunit.sourceforge.net/) is needed in order to use unit tests.

To compile and run unit tests:
$ scons test
$ scons run-test

